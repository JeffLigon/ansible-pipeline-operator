# code: language=ansible

# Set of tasks for creating a Trilio for Kubernetes Backup Plan in a namespace
# for describing what and where to backup
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Backup Plan Tasks
  tags: ['backupplan']
  block:
    - name: Configure the backup plan in "{{ trilio_kubernetes_backup_namespaces }}"
      ansible.builtin.template:
        src: templates/backupplan.yaml.j2
        dest: /tmp/{{ trilio_kubernetes_backupplan_name }}-{{ item }}-backupplan.yaml
        mode: "0600"

    - name: check backupplans Exist or not
      kubernetes.core.k8s_info:
        api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
        host: "{{ trilio_kubernetes_host }}"
        api_version: v1
        kind: BackupPlan
        namespace: "{{ item }}"
        name: "{{ trilio_kubernetes_backupplan_name }}-{{ item }}"
        validate_certs: false
      register: getbackupplan

    # Create the specified backup plan in specifed namespace
    - name: Create the backup plan "{{ trilio_kubernetes_backup_namespaces }}"
      kubernetes.core.k8s:
        api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
        host: "{{ trilio_kubernetes_host }}"
        kind: BackupPlan
        state: present
        namespace: "{{ item }}"
        src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-{{ item }}-backupplan.yaml"
        validate_certs: false
      register: trilio_kubernetes_backupplan
      when: trilio_kubernetes_auth_type == "password" and getbackupplan.resources | length == 0

    - name: Get backupplans from namespaces
      kubernetes.core.k8s_info:
        api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
        host: "{{ trilio_kubernetes_host }}"
        api_version: v1
        kind: BackupPlan
        namespace: "{{ item }}"
        name: "{{ trilio_kubernetes_backupplan_name }}-{{ item }}"
        validate_certs: false
      register: backupplans
      retries: 5
      delay: 10
      until: backupplans.resources[0].status is defined and backupplans.resources[0].status.status == 'Available'
